[comment encoding = UTF-8 /]
(module generateCode('http://www.example.org/RestAssured')]

[comment]
- Klasse anlegen
- import von template Engine --> Raussuchen, möglichst einfach, String2String-Map
- template mit YAML map Aufrufen
- 
[/comment]

[template public generateTestScenario(testScenario : TestScenario)]
	[comment @main /]
	[file (testScenario.name.concat('.ra'), false, 'UTF-8')]

	public void [testScenario.name /] [for (param : Parameter | testScenario.parameter) before ('(') separator(',') after (')')][param.type/] [param.name/][/for] { 
		[for (testRoundtrip : TestRoundtrip | testScenario.testroundtrip) separator('\n\n') ]
		ValidatableResponse [testRoundtrip.name/] = RestAssured.given()
            [comment]
                .mtl content that did not work (square brackets are disallowed in comments, so I changed them)
                (if (testRoundtrip.requestspecification.authenticationScheme.oclIsTypeOf(BasicAuthScheme)))
                    (let basicAuthScheme : BasicAuthScheme = testRoundtrip.requestspecification.authenticationScheme.oclAsType(BasicAuthScheme))
                        .auth().basic((basicAuthScheme.user/), (basicAuthScheme.password/))
                    (/let)
                (/if)
            [/comment]
			[for (requestParam : RequestParameter | testRoundtrip.requestspecification.requestParameters)]
				.param([requestParam.key/], [requestParam.value/])
			[/for]
			.when()
				.[testRoundtrip.requestspecification.method/]([testRoundtrip.requestspecification.path/])
				[generateURL(testRoundtrip.)/] [comment] //TODO call other accceloe template function [/comment]
			.then()
				[let responseSpecification : ResponseSpecification = testRoundtrip.assertresponse]
					.assertThat()
					[if (responseSpecification.expectedStatusCode->notEmpty())]
						[if (responseSpecification.expectedStatusCode.oclIsTypeOf(IsIn))]
							[let statusCode : IsIn = responseSpecification.expectedStatusCode.oclAsType(IsIn)]
								.statusCode(in([statusCode.allowedValues/])
							[/let]
						[/if]
					[/if]
					[if (responseSpecification.bodyMatchers->notEmpty())]
						[for (matcher : BodyMatcher | responseSpecification.bodyMatchers)]
						    [if (matcher.oclIsTypeOf(HasXPath))]
								[let bodyXPath : HasXPath = matcher.oclAsType(HasXPath)]
									.body([bodyXPath.pathString/])
								[/let]
							[/if]
							[if (matcher.oclIsTypeOf(IsIn))]
								[let bodyIsIn : IsIn = matcher.oclAsType(IsIn)]
									//Todo: is this needed?
								[/let]
							[/if]
							[if (testRoundtrip.assertresponse.responseParameters -> isEmpty)]
								//Todo: missing in Metamodel
							[/if]
						[/for]
					[/if]
				[/let];
			[for (responseParam : ResponseParam | testRoundtrip.assertresponse.responseParameters)]
				String [responseParam.key/] = [testRoundtrip.name/].path("[responseParam.key/]");
			[/for]
		[/for]
	}
	[/file]
[/template]

[template private generateURLPath(url : URL) ]
	
[/template]
